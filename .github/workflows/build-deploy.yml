name: Build & Deploy
run-name: Initiated by ${{ github.actor }}
# Run on main branch with tag v*.*.*
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to deploy'
        required: true
        default: 'v0.0.0'
      description:
        description: 'Description of the release'
        required: true
        default: 'Release v0.0.0'
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      tag_exists: ${{ steps.create_job_outputs.outputs.tag_exists }}
    steps:
      - name: Check if tag already exists
        id: check_tag_exists
        uses: mukunku/tag-exists-action@v1.2.0
        with:
          tag: ${{ github.event.inputs.tag }}
        # Create job outputs
      - name: Create job outputs
        id: create_job_outputs
        run: |
          echo "tag_exists=${{ steps.check_tag_exists.outputs.exists }}" >> $GITHUB_OUTPUT
  build:
    needs: check
    if: ${{ needs.check.outputs.tag_exists == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.19.0
      # Install dependencies
      - run: npm install
      - run: npm install -g vsce
      # Build the extension
      - run: vsce package
        env:
          COMMIT_GRAPHQL_API_URL : https://api.commit.dev/graphql
          COMMIT_API_BASE_URL : https://api.commit.dev
          COMMIT_APP_BASE_URL : https://app.commit.dev
          COMMIT_AUTH0_DOMAIN : https://commitdev.auth0.com
          COMMIT_CLIENT_ID : ${{ secrets.COMMIT_CLIENT_ID_STAGING }}

      # Rename the VSIX file to the version number
      - name: Rename VSIX file
        run: mv *.vsix commit-extension-${{ github.event.inputs.tag }}.vsix
      # Upload the VSIX file as an artifact with version number
      - uses: actions/upload-artifact@v3
        with:
          name: commit-extension-${{ github.event.inputs.tag }}
          path: ./*.vsix

  # Create a release with the version number
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Download the VSIX file from the artifact
      - uses: actions/download-artifact@v3
        with:
          name: commit-extension-${{ github.event.inputs.tag }}
          path: ./

      # Upload the VSIX file to the Github release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: ${{ github.event.inputs.tag }}
          body: |
            Release ${{ github.event.inputs.description }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./commit-extension-${{ github.event.inputs.tag }}.vsix
          asset_name: commit-extension-${{ github.event.inputs.tag }}.vsix
          asset_content_type: application/zip